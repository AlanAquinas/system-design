version: "3.9"
services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: fastapi_user
      POSTGRES_PASSWORD: fastapi_pass
      POSTGRES_DB: fastapi_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend
    
  pgbouncer:
    image: edoburu/pgbouncer
    environment:
      DB_PORT: 5432
      DB_HOST: db
      DB_USER: fastapi_user
      DB_PASSWORD: fastapi_pass
      POOL_MODE: transaction  # Use transaction pooling
      MAX_CLIENT_CONN: 1000    # Max connections from FastAPI
      DEFAULT_POOL_SIZE: 20   # Number of DB connections PgBouncer keeps open
      AUTH_TYPE: scram-sha-256
    ports:
      - "5432:5432"  # Expose PgBouncer on a different port
    depends_on:
      - db
    networks:
      - backend
      
  # app:
  #   build: .
  #   ports:
  #     - "8000:8000"
  #   depends_on:
  #     - pgbouncer
  #     - db
  #   environment:
  #     DATABASE_URL: "postgresql://fastapi_user:fastapi_pass@pgbouncer:5432/fastapi_db"
  #   networks:
  #     - backend

  app1:
    build: .
    environment:
      DATABASE_URL: "postgresql://fastapi_user:fastapi_pass@pgbouncer:5432/fastapi_db"
    networks:
      - backend
    depends_on:
      - pgbouncer
      - db
    deploy:
      resources:
        limits:
          cpus: "2"
        reservations:
          cpus: "1"

  app2:
    build: .
    environment:
      DATABASE_URL: "postgresql://fastapi_user:fastapi_pass@pgbouncer:5432/fastapi_db"
    networks:
      - backend
    depends_on:
      - pgbouncer
      - db
    deploy:
      resources:
        limits:
          cpus: "2"
        reservations:
          cpus: "1"

  app3:
    build: .
    environment:
      DATABASE_URL: "postgresql://fastapi_user:fastapi_pass@pgbouncer:5432/fastapi_db"
    networks:
      - backend
    depends_on:
      - pgbouncer
      - db
    deploy:
      resources:
        limits:
          cpus: "2"
        reservations:
          cpus: "1"

  app4:
    build: .
    environment:
      DATABASE_URL: "postgresql://fastapi_user:fastapi_pass@pgbouncer:5432/fastapi_db"
    networks:
      - backend
    depends_on:
      - pgbouncer
      - db
    deploy:
      resources:
        limits:
          cpus: "2"
        reservations:
          cpus: "1"
    
  app5:
    build: .
    environment:
      DATABASE_URL: "postgresql://fastapi_user:fastapi_pass@pgbouncer:5432/fastapi_db"
    networks:
      - backend
    depends_on:
      - pgbouncer
      - db
    deploy:
      resources:
        limits:
          cpus: "2"
        reservations:
          cpus: "1"

  app6:
    build: .
    environment:
      DATABASE_URL: "postgresql://fastapi_user:fastapi_pass@pgbouncer:5432/fastapi_db"
    networks:
      - backend
    depends_on:
      - pgbouncer
      - db
    deploy:
      resources:
        limits:
          cpus: "2"
        reservations:
          cpus: "1"

  app7:
    build: .
    environment:
      DATABASE_URL: "postgresql://fastapi_user:fastapi_pass@pgbouncer:5432/fastapi_db"
    networks:
      - backend
    depends_on:
      - pgbouncer
      - db
    deploy:
      resources:
        limits:
          cpus: "2"
        reservations:
          cpus: "1"

  app8:
    build: .
    environment:
      DATABASE_URL: "postgresql://fastapi_user:fastapi_pass@pgbouncer:5432/fastapi_db"
    networks:
      - backend
    depends_on:
      - pgbouncer
      - db
    deploy:
      resources:
        limits:
          cpus: "2"
        reservations:
          cpus: "1"
          
  loadbalancer:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      # - ./default.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "8080:80"
    depends_on:
      - app1
      - app2
    networks:
      - backend

networks:
  backend:
    driver: bridge
    
volumes:
  postgres_data:
